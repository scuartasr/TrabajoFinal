group_by(Conglomerado) %>%
summarise(Total.coment = sum(Comentarios)) %>%
summarise(Total.peyor = sum(Peyorativos)) %>%
summarise(Total.anon = sumn(Ofensivos))
resumen.congl = datos %>%
group_by(Conglomerado) %>%
summarise(Comentarios = sum(Comentarios)) %>%
summarise(Peyorativos  = sum(Peyorativos)) %>%
summarise(Ofensivos = sumn(Ofensivos))
resumen.congl = datos %>%
group_by(as.factor(Conglomerado)) %>%
summarise(Comentarios = sum(Comentarios)) %>%
summarise(Peyorativos  = sum(Peyorativos)) %>%
summarise(Ofensivos = sumn(Ofensivos))
resumen.congl = datos %>%
group_by(as.factor(Conglomerado)) %>%
summarise(Comentarios = sum(datos$Comentarios)) %>%
summarise(Peyorativos  = sum(datos$Peyorativos)) %>%
summarise(Ofensivos = sumn(datos$Ofensivos))
resumen.congl = datos %>%
group_by(as.factor(Conglomerado)) %>%
summarise(Comentarios = sum(datos$Comentarios)) %>%
summarise(Peyorativos  = sum(datos$Peyorativos)) %>%
summarise(Ofensivos = sum(datos$Ofensivos))
View(resumen.congl)
resumen.congl = datos %>%
group_by(as.factor(datos$Conglomerado)) %>%
summarise(Comentarios = sum(datos$Comentarios)) %>%
summarise(Peyorativos  = sum(datos$Peyorativos)) %>%
summarise(Ofensivos = sum(datos$Ofensivos))
resumen.congl = datos %>%
group_by(as.factor(datos$Conglomerado))
View(resumen.congl)
resumen.congl = datos %>%
group_by(as.factor(datos$Conglomerado)) %>%
summarise(Comentarios = sum(Comentarios))
View(resumen.congl)
View(datos)
View(datos)
comen.c = datos %>%
group_by(as.factor(datos$Conglomerado)) %>%
summarise(Comentarios = sum(Comentarios)) %>%
rename(Conglomerado = `as.factor(datos$Conglomerado)`)
View(comen.c)
comen.c = datos %>%
group_by(as.factor(datos$Conglomerado)) %>%
summarise(Comentarios = sum(Comentarios)) %>%
rename(Conglomerado = `as.factor(datos$Conglomerado)`)
ofens.c = datos %>%
group_by(as.factor(datos$Conglomerado)) %>%
summarise(Ofensivos = sum(Ofensivos)) %>%
rename(Conglomerado = `as.factor(datos$Conglomerado)`)
View(datos)
View(ofens.c)
comen.c = datos %>%
group_by(as.factor(datos$Conglomerado)) %>%
summarise(Comentarios = sum(Comentarios)) %>%
rename(Conglomerado = `as.factor(datos$Conglomerado)`)
anon.c = datos %>%
group_by(as.factor(datos$Conglomerado)) %>%
summarise(Ofensivos = sum(Ofensivos)) %>%
rename(Conglomerado = `as.factor(datos$Conglomerado)`) %>%
rename(Anonimo = Ofensivos)
peyor.c = datos %>%
group_by(as.factor(datos$Conglomerado)) %>%
summarise(Peyorativos = sum(Peyotativos)) %>%
rename(Conglomerado = `as.factor(datos$Conglomerado)`)
peyor.c = datos %>%
group_by(as.factor(datos$Conglomerado)) %>%
summarise(Peyorativos = sum(Peyorativos)) %>%
rename(Conglomerado = `as.factor(datos$Conglomerado)`)
View(ofens.c)
View(peyor.c)
View(ofens.c)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
set.seed(20220126)
# Aleatorización
indices = seq(1, 2295)
aleatorio = sample(indices,
size = 2295,
replace = FALSE)
# Matriz
auxiliar = matrix(aleatorio, ncol = 15, byrow = T)
# Conglomerados
conglomerados = as.data.frame(auxiliar)
save(conglomerados, file = "Conglomerados.RData") # ¿Guardar como .csv?
set.seed(1037670103)
num.congl = seq(1, 153)
muestra = sort(sample(num.congl,
size = 20,
replace = FALSE))
cong.muestreo = conglomerados[which(indices %in% muestra),]
write.csv(cong.muestreo, file = './muestreo.csv')
datos <- read.csv("Datos.csv", encoding = "UTF-8")
datos = na.omit(datos)
datos = datos %>%
mutate(Fecha = as.Date(Fecha, format = "%d/%m/%Y")) %>%
rename(Encuestador = X.U.FEFF.Encuestador)
comen.c = datos %>%
group_by(as.factor(datos$Conglomerado)) %>%
summarise(Comentarios = sum(Comentarios)) %>%
rename(Conglomerado = `as.factor(datos$Conglomerado)`)
anon.c = datos %>%
group_by(as.factor(datos$Conglomerado)) %>%
summarise(Ofensivos = sum(Ofensivos)) %>%
rename(Conglomerado = `as.factor(datos$Conglomerado)`) %>%
rename(Anonimo = Ofensivos)
peyor.c = datos %>%
group_by(as.factor(datos$Conglomerado)) %>%
summarise(Peyorativos = sum(Peyorativos)) %>%
rename(Conglomerado = `as.factor(datos$Conglomerado)`)
View(anon.c)
View(peyor.c)
View(comen.c)
resumen = merge(comen.c, anon.c, by = Conglomerado)
resumen = merge(comen.c, anon.c, by = "Conglomerado")
View(resumen)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
set.seed(20220126)
# Aleatorización
indices = seq(1, 2295)
aleatorio = sample(indices,
size = 2295,
replace = FALSE)
# Matriz
auxiliar = matrix(aleatorio, ncol = 15, byrow = T)
# Conglomerados
conglomerados = as.data.frame(auxiliar)
save(conglomerados, file = "Conglomerados.RData") # ¿Guardar como .csv?
set.seed(1037670103)
num.congl = seq(1, 153)
muestra = sort(sample(num.congl,
size = 20,
replace = FALSE))
cong.muestreo = conglomerados[which(indices %in% muestra),]
write.csv(cong.muestreo, file = './muestreo.csv')
datos <- read.csv("Datos.csv", encoding = "UTF-8")
datos = na.omit(datos)
datos = datos %>%
mutate(Fecha = as.Date(Fecha, format = "%d/%m/%Y")) %>%
rename(Encuestador = X.U.FEFF.Encuestador)
comen.c = datos %>%
group_by(as.factor(datos$Conglomerado)) %>%
summarise(Comentarios = sum(Comentarios)) %>%
rename(Conglomerado = `as.factor(datos$Conglomerado)`)
anon.c = datos %>%
group_by(as.factor(datos$Conglomerado)) %>%
summarise(Ofensivos = sum(Ofensivos)) %>%
rename(Conglomerado = `as.factor(datos$Conglomerado)`) %>%
rename(Anonimo = Ofensivos)
peyor.c = datos %>%
group_by(as.factor(datos$Conglomerado)) %>%
summarise(Peyorativos = sum(Peyorativos)) %>%
rename(Conglomerado = `as.factor(datos$Conglomerado)`)
resumen = merge(comen.c, peyor.c, by = "Conglomerado")
resumen = merge(resumen, anon.c, by = "Conglomerado")
install.packages(c("gridBase", "gridExtra"))
library(gridExtra)
grid.table(resumen)
kable(resumen)
library(knitr)
kable(resumen)
?kable
suma.pey.c = sum(resumen[, 2])
suma.pey.c = sum(resumen[, 2])
congs = nrow(resumen)
est.m.c = suma.pey.c / congs
View(datos)
mean(datos[, 6])
mean(datos[, 7])
est.t.c = Mo * est.m.c
Mo = 2295
est.t.c = Mo * est.m.c
format(scientific = F)
format(est.t.c, scientific = F)
options(scipen=999)
N = 153
Mo = M * N
M = 15
options(scipen=999)
N = 153
Mo = M * N
est.t.c = N * est.m.c
totales.cong = as.vector(resumen[, 3])
totales.cong
est.m.c
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(gridExtra)
library(knitr)
set.seed(20220126)
# Aleatorización
indices = seq(1, 2295)
aleatorio = sample(indices,
size = 2295,
replace = FALSE)
# Matriz
auxiliar = matrix(aleatorio, ncol = 15, byrow = T)
# Conglomerados
conglomerados = as.data.frame(auxiliar)
save(conglomerados, file = "Conglomerados.RData") # ¿Guardar como .csv?
set.seed(1037670103)
num.congl = seq(1, 153)
muestra = sort(sample(num.congl,
size = 20,
replace = FALSE))
cong.muestreo = conglomerados[which(indices %in% muestra),]
write.csv(cong.muestreo, file = './muestreo.csv')
datos <- read.csv("Datos.csv", encoding = "UTF-8")
datos = na.omit(datos)
datos = datos %>%
mutate(Fecha = as.Date(Fecha, format = "%d/%m/%Y")) %>%
rename(Encuestador = X.U.FEFF.Encuestador)
comen.c = datos %>%
group_by(as.factor(datos$Conglomerado)) %>%
summarise(Comentarios = sum(Comentarios)) %>%
rename(Conglomerado = `as.factor(datos$Conglomerado)`)
anon.c = datos %>%
group_by(as.factor(datos$Conglomerado)) %>%
summarise(Ofensivos = sum(Ofensivos)) %>%
rename(Conglomerado = `as.factor(datos$Conglomerado)`) %>%
rename(Anonimo = Ofensivos)
peyor.c = datos %>%
group_by(as.factor(datos$Conglomerado)) %>%
summarise(Peyorativos = sum(Peyorativos)) %>%
rename(Conglomerado = `as.factor(datos$Conglomerado)`)
resumen = merge(comen.c, peyor.c, by = "Conglomerado")
resumen = merge(resumen, anon.c, by = "Conglomerado")
kable(resumen, caption = "Resultados en los conglomerados del estudio piloto")
suma.pey.c = sum(resumen[, 3])
congs = nrow(resumen)
est.m.c = suma.pey.c / congs
M = 15
est.m = est.m.c/M
options(scipen=999)
N = 153
Mo = M * N
est.t.c = N * est.m.c
totales.cong = as.vector(resumen[, 3])
#paso1 = (totales.cong - )
paso1 = (totales.cong - est.m.c)^2
paso1
(44-41.15)^2
(14-41.15)^2
paso2 = paso1 / (n.ep - 1)
n.ep = 20
totales.cong = as.vector(resumen[, 3])
paso1 = (totales.cong - est.m.c)^2
paso2 = paso1 / (n.ep - 1)
paso2
8.1225/19
N
est.var.tc = paso2 * N * (N - n.ep) / n.ep
est.var.tc = sum(paso2) * N * (N - n.ep) / n.ep
sqrt(est.var.tc)
# Media
est.var.m = est.var.tc / (Mo^2)
sqrt(est.var.m)
qnorm(0.05, lower.tail = FALSE)
alfa = 0.05
z = qnorm((alfa/2), mean  = 0, sd = 1, lower.tail = FALSE)
epsilon = 0.1
Bm = epsilon * est.m
n0.t = (z * sum(paso2))/(Bm * M)
n0.t = ((z * sum(paso2))/(Bm * M))^2
z
sum(paso2)
z * sum(paso2) / (B * M)
B
alfa = 0.05
z = qnorm((alfa/2), mean  = 0, sd = 1, lower.tail = FALSE)
epsilon = 0.1
Bm = epsilon * est.m
(z * sum(paso2)) / (Bm * M)
((z * sum(paso2)) / (Bm * M))^2
1761803/(1+1761803/N)
alfa = 0.10
z = qnorm((alfa/2), mean  = 0, sd = 1, lower.tail = FALSE)
epsilon = 0.1
Bm = epsilon * est.m
n0.m = ((z * sum(paso2))/(Bm * M))^2
n.m = n0.m / (1 + n0.m/N)
Bm
n.m
z
alfa = 0.05
z = qnorm((alfa/2), mean  = 0, sd = 1, lower.tail = FALSE)
epsilon = 0.1
Bm = epsilon * est.m
n0.m = ((z * sum(paso2))/(Bm * M))^2
n.m = n0.m / (1 + n0.m/N)
z
sum(paso2)
n0.m = ((z^2) * sum(paso2))/((Bm * M))^2
n.m = n0.m / (1 + n0.m/N)
n.m
Bm
M
sum((totales.cong - est.m.c)^2)/19
pas2
paso2
sum(paso2)
alfa = 0.10
z = qnorm((alfa/2), mean  = 0, sd = 1, lower.tail = FALSE)
epsilon = 0.15
Bm = epsilon * est.m
n0.m = ((z^2) * sum(paso2))/((Bm * M))^2
n.m = n0.m / (1 + n0.m/N)
Bm
M
Bm
alfa = 0.10
z = qnorm((alfa/2), mean  = 0, sd = 1, lower.tail = FALSE)
epsilon = 0.15
Bm = 1
n0.m = ((z^2) * sum(paso2))/((Bm * M))^2
n.m = n0.m / (1 + n0.m/N)
n.m
alfa = 0.10
z = qnorm((alfa/2), mean  = 0, sd = 1, lower.tail = FALSE)
epsilon = 0.15
Bm = epsilon * est.m
n0.m = ((z^2) * sum(paso2))/((Bm * M))^2
n0.m = ((z^2) * sum(paso2))/((Bm * M))^2
n.m = n0.m / (1 + n0.m/N)
celin(n.m)
celing(n.m)
ceiling(n.m)
Bt = epsilon * est.t.c
D = (Bt / (z * N))^2
n.t = (N * sum(paso2))/(N*D + sum(paso2))
dir()
knitr::opts_chunk$set(echo = TRUE)
load("Conglomerados.RData")
View(conglomerados)
library(readxl)
read_xlsx("Datos.xlsx")
read.csv("muestreo.csv")
knitr::opts_chunk$set(echo = FALSE)
read_xlsx("Resultado.xlsx")
?read_xlsx
install.packages("readxl")
library(readxl)
read_xlsx("Resultado.xlsx")
read_xlsx("Resultados.xlsx")
data<-read_xlsx("Resultados.xlsx")
data
View(data)
summary(data$comentarios)
data$comentarios
summary(data[,5])
var(data[,5])
sd(data[,5])
plot(data[,5])
var(data[,5])
sqrt(data[,5])
sd(data[,5])
var(as.vector(data[,5]))
sd(as.vector(data[,5]))
sd(as.vector(t(data[,5])))
sd(as.vector(t(data[,5])))^2
summary(data[,5])
hist(data[,5])
sd(as.vector(t(data[,5])))
hist(as.vector(t(data[,5])))
hist(as.vector((data[,5])))
hist(as.vector(t(data[,5])))
summary(data[,5])
hist(as.vector(t(data[,5])), main= "Histograma de comentarios",xlab="Número de comentarios por publición",ylab="Frecuencia", col="red")
plot(as.vector(t(data[,5])), main= "Histograma de comentarios",xlab="Número de comentarios por publicación",ylab="Frecuencia", col="red")
barplot(as.vector(t(data[,5])), main= "Histograma de comentarios",xlab="Número de comentarios por publicación",ylab="Frecuencia", col="red")
?hist
summary(data[,5])
mode(data[,5])
mode(as.vector(t(data[,5])))
mode(as.numeric(t(data[,5])))
install.packages(modeest)
install.packages("modeest")
library(modeest)
mlv(dat[,5])
mlv(data[,5])
mlv(as.vector(t(data[,5])))
mlv(as.numeric(t(data[,5])))
barplot(as.vector(t(data[,5])), main= "Histograma de comentarios",xlab="Número de comentarios por publicación",ylab="Frecuencia", col="red")
mode(data[,5])
mode(as.vector(t(data[,5]))
as.vector(t(data[,5])
mode(as.vector(t(data[,5])))
?mode
mode(as.numeric(t(data[,5])))
mode(as.numeric(t(data[,5])))
library(stats)
mode(as.numeric(t(data[,5])))
mode(data[,5])
library(modeest)
summary(data[,5])
sd(as.vector(t(data[,5])))
barplot(as.vector(t(data[,5])), main= "Histograma de comentarios",xlab="Número de comentarios por publicación",ylab="Frecuencia", col="red")
mode(dat[,5])
mode(data[,5])
mode(as.vector(t(data[,5]))
dim(data)
dim(data)
barplot(as.vector(t(data[,5])), main= "Histograma de comentarios",xlab="Número de comentarios por publicación",ylab="Frecuencia", col="red")
dim(data[,[,5]]==0)
aux<-data[data[,5]==0,]
dim(aux)
aux
dim(data[data[,5]==1,])
dim(data[data[,5]==2,])
dim(data[data[,5]==3,])
barplot(as.vector(t(data[,5])), main= "Histograma de comentarios",xlab="Número de comentarios por publicación",ylab="Frecuencia", col="red")
summary(data[,6])
summary(data[,6])
barplot(as.vector(t(data[,5])), main= "Histograma de comentarios peyorativos",xlab="Número de comentarios peyorativos por publicación",ylab="Frecuencia", col="red")
summary(data[,6])
barplot(as.vector(t(data[,6])), main= "Histograma de comentarios peyorativos",xlab="Número de comentarios peyorativos por publicación",ylab="Frecuencia", col="red")
hist(as.vector(t(data[,6])), main= "Histograma de comentarios peyorativos",xlab="Número de comentarios peyorativos por publicación",ylab="Frecuencia", col="red")
?hist
summary(data[,6])
hist(as.vector(t(data[,6])),breaks = c(0,5,10,15,20,30,40,50,60,70,80,90,100,200,300,400,500,600,700,800,900,1052), main= "Histograma de comentarios peyorativos",xlab="Número de comentarios peyorativos por publicación",ylab="Frecuencia", col="red")
hist(as.vector(t(data[,6])),breaks = c(0,5,20,30,40,50,60,70,80,90,100,200,300,400,500,600,700,800,900,1052), main= "Histograma de comentarios peyorativos",xlab="Número de comentarios peyorativos por publicación",ylab="Frecuencia", col="red")
summary(data[,6])
hist(as.vector(t(data[,6])),breaks = c(0,5,20,40,60,80,100,300,700,1052), main= "Histograma de comentarios peyorativos",xlab="Número de comentarios peyorativos por publicación",ylab="Frecuencia", col="red")
summary(data[,6])
barplot(as.vector(t(data[,6])), main= "Histograma de comentarios peyorativos",xlab="Número de comentarios peyorativos por publicación",ylab="Frecuencia", col="red")
#summary(data[,6])
hist(as.vector(t(data[,6])), main= "Histograma de comentarios peyorativos",xlab="Número de comentarios peyorativos por publicación",ylab="Frecuencia", col="red")
#summary(data[,6])
hist(as.vector(t(data[,6])), breaks=c(0,100,300,500,700,800,900,1052),main= "Histograma de comentarios peyorativos",xlab="Número de comentarios peyorativos por publicación",ylab="Frecuencia", col="red")
#summary(data[,6])
hist(as.vector(t(data[,6])), breaks=c(1,100,300,500,700,800,900,1052),main= "Histograma de comentarios peyorativos",xlab="Número de comentarios peyorativos por publicación",ylab="Frecuencia", col="red")
#summary(data[,6])
hist(as.vector(t(data[,6])), breaks=c(0,100,300,500,700,800,900,1052),main= "Histograma de comentarios peyorativos",xlab="Número de comentarios peyorativos por publicación",ylab="Frecuencia", col="red")
#summary(data[,6])
barplot(as.vector(t(data[,6])), breaks=c(0,100,300,500,700,800,900,1052),main= "Histograma de comentarios peyorativos",xlab="Número de comentarios peyorativos por publicación",ylab="Frecuencia", col="red")
dim(data[data[,5]==0,])
dim(data[data[,6]==0,])
#summary(data[,6])
barplot(as.vector(t(data[,6])),main= "Histograma de comentarios peyorativos",xlab="Número de comentarios peyorativos por publicación",ylab="Frecuencia", col="red")
#summary(data[,6])
hist(as.vector(t(data[,6])),main= "Histograma de comentarios peyorativos",xlab="Número de comentarios peyorativos por publicación",ylab="Frecuencia", col="red")
#summary(data[,5])
sd(as.vector(t(data[,5])))
hist(as.vector(t(data[,5])), main= "Histograma de comentarios",xlab="Número de comentarios por publicación",ylab="Frecuencia", col="red")
summary(data[,7])
summary(data[,7])
hist(as.vector(t(data[,7])),main= "Histograma de comentarios anononimos",xlab="Número de comentarios anonimos por publicación",ylab="Frecuencia", col="red")
summary(data[,7])
hist(as.vector(t(data[,7])),breaks = c(0,5,10,15,20,25,30),main= "Histograma de comentarios anononimos",xlab="Número de comentarios anonimos por publicación",ylab="Frecuencia", col="red")
summary(data[,7])
hist(as.vector(t(data[,7])),breaks = c(0,5,10,15,20,25),main= "Histograma de comentarios anononimos",xlab="Número de comentarios anonimos por publicación",ylab="Frecuencia", col="red")
summary(data[,7])
hist(as.vector(t(data[,7])),breaks = c(0,5,10,15,20,25,30,102),main= "Histograma de comentarios anononimos",xlab="Número de comentarios anonimos por publicación",ylab="Frecuencia", col="red")
summary(data[,7])
hist(as.vector(t(data[,7])),breaks = c(0,5,10,15,20,25,30,102),main= "Histograma de comentarios anononimos",xlab="Número de comentarios anonimos por publicación",ylab="Frecuencia", col="red")
summary(data[,7])
hist(as.vector(t(data[,7])),breaks = c(0,5,20,25,30,102),main= "Histograma de comentarios anononimos",xlab="Número de comentarios anonimos por publicación",ylab="Frecuencia", col="red")
summary(data[,7])
hist(as.vector(t(data[,7])),breaks = c(0,15,20,25,30,102),main= "Histograma de comentarios anononimos",xlab="Número de comentarios anonimos por publicación",ylab="Frecuencia", col="red")
summary(data[,7])
hist(as.vector(t(data[,7])),breaks = c(0,5,15,20,25,30,102),main= "Histograma de comentarios anononimos",xlab="Número de comentarios anonimos por publicación",ylab="Frecuencia", col="red")
summary(data[,7])
hist(as.vector(t(data[,7])),main= "Histograma de comentarios anononimos",xlab="Número de comentarios anonimos por publicación",ylab="Frecuencia", col="red")
hist(as.vector(t(data[,8]))
hist(as.vector(t(data[,8]))
hist(as.vector(t(data[,8])))
# Precio vs cityMpg según los niveles de bodyStyle
g1 = ggplot(data = data, aes(color = bodyStyle)) +
geom_point(mapping = aes( y = Comentarios
shape = Tema)) +
# Precio vs cityMpg según los niveles de bodyStyle
g1 = ggplot(data = data, aes(color = bodyStyle)) +
geom_point(mapping = aes( y = data$Comentarios
shape = data$Tema)) +
# Precio vs cityMpg según los niveles de bodyStyle
g1 = ggplot(data = data, aes(color = bodyStyle)) +
geom_point(mapping = aes( y = data$Comentarios, shape = data$Tema)) +
labs(color = "Tipo de vehículo") +
labs(title = "Gráfico de dispersión",
subtitle = "de millas recorridas por galón en área urbana contra precio",
caption = "Figura 2.") +
xlab("Millas recorridas por galón en área urbana [mpg]") +
ylab("Precio [$USD]") +
theme_light() +
theme(plot.title = element_text(size = 12, face = "bold"),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(size = 12, color = "gray")) +
scale_color_manual(values = c("#d80000", "#2692ff", "#00d800"))
library(GGally)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
knitr::opts_chunk$set(echo = FALSE)
# Precio vs cityMpg según los niveles de bodyStyle
g1 = ggplot(data = data, aes(color = bodyStyle)) +
geom_point(mapping = aes( y = data$Comentarios, shape = data$Tema)) +
labs(color = "Tipo de vehículo") +
labs(title = "Gráfico de dispersión",
subtitle = "de millas recorridas por galón en área urbana contra precio",
caption = "Figura 2.") +
xlab("Millas recorridas por galón en área urbana [mpg]") +
ylab("Precio [$USD]") +
theme_light() +
theme(plot.title = element_text(size = 12, face = "bold"),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(size = 12, color = "gray")) +
scale_color_manual(values = c("#d80000", "#2692ff", "#00d800"))
g1
plot(x=data$Conglomerado, y=data$Peyorativos)
